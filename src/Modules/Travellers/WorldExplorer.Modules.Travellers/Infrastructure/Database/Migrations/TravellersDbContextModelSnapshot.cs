// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorldExplorer.Modules.Travellers.Infrastructure.Database;

#nullable disable

namespace WorldExplorer.Modules.Travellers.Infrastructure.Database.Migrations
{
    [DbContext(typeof(TravellersDbContext))]
    partial class TravellersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("worldexplorer.travellers")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorldExplorer.Common.Infrastructure.Inbox.InboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InboxMessages", "worldexplorer.travellers");
                });

            modelBuilder.Entity("WorldExplorer.Modules.Travellers.Application.Travellers.Traveller", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Travellers", "worldexplorer.travellers");
                });

            modelBuilder.Entity("WorldExplorer.Modules.Travellers.Application.Visits.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Places", "worldexplorer.travellers");
                });

            modelBuilder.Entity("WorldExplorer.Modules.Travellers.Application.Visits.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("VisitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("Review", "worldexplorer.travellers");
                });

            modelBuilder.Entity("WorldExplorer.Modules.Travellers.Application.Visits.Visit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TravellerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TravellerId", "PlaceId")
                        .IsUnique();

                    b.ToTable("Visits", "worldexplorer.travellers");
                });

            modelBuilder.Entity("WorldExplorer.Modules.Travellers.Application.Visits.Review", b =>
                {
                    b.HasOne("WorldExplorer.Modules.Travellers.Application.Visits.Visit", null)
                        .WithOne("Review")
                        .HasForeignKey("WorldExplorer.Modules.Travellers.Application.Visits.Review", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorldExplorer.Modules.Travellers.Application.Visits.Visit", b =>
                {
                    b.HasOne("WorldExplorer.Modules.Travellers.Application.Visits.Place", null)
                        .WithMany("Visits")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorldExplorer.Modules.Travellers.Application.Travellers.Traveller", "Traveller")
                        .WithMany("Visits")
                        .HasForeignKey("TravellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Traveller");
                });

            modelBuilder.Entity("WorldExplorer.Modules.Travellers.Application.Travellers.Traveller", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("WorldExplorer.Modules.Travellers.Application.Visits.Place", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("WorldExplorer.Modules.Travellers.Application.Visits.Visit", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
